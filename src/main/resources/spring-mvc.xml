<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.3.xsd  
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<!-- 自动扫描controller -->
	<context:component-scan base-package="com.chartroom.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 开启注解 -->
	<mvc:annotation-driven  validator="validator"/>
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->  
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    	<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    	<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
    	<property name="validationMessageSource" ref="messageSource"/>
	</bean>
	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->  
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basenames">
        	<list>
           	 	<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
            	<value>classpath:validator</value>
            	<value>classpath:org/hibernate/validator/ValidationMessages</value>
        	</list>
    	</property>
    	<property name="useCodeAsDefaultMessage" value="false"/>
    	<property name="defaultEncoding" value="UTF-8"/>
    	<property name="cacheSeconds" value="60"/>
	</bean>

	<!-- jasckson2对象映射-->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="serializationInclusion">
			<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">ALWAYS</value>
		</property>
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="objectMapper"></property>
				<property name="prettyPrint" value="true"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" />
					<property name="contentType" value="text/html" />
					<property name="prefix" value="/WEB-INF/page" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 配置文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/js/**" location="WEB-INF/js/" />
	<mvc:resources mapping="/images/**" location="WEB-INF/images/" />
	<mvc:resources mapping="/css/**" location="WEB-INF/css/" />

	<!-- 当servletmapping为/时,使静态资源能被访问 -->
	<mvc:default-servlet-handler />
</beans>